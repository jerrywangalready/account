<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgcc.account.settings.dao.MaintainCardDao">

    <select id="queryList" resultType="java.util.Map">
        SELECT
            t.uuid,
            t.card_name,
            u.nickname card_manager,
            ifnull(b.balance, 0) balance,
            t.card_color
          FROM card_info t
          LEFT JOIN s_users u ON t.card_manager = u.username AND u.isenable = '1'
          LEFT JOIN (SELECT a.card_id,sum(a.balance) balance
                      FROM account_info a
                    LEFT JOIN card_info c on a.card_id = c.card_id
                    GROUP BY a.card_id
                    ) b ON t.card_id = b.card_id
    </select>

    <select id="getManagerOptions" resultType="java.util.Map">
        SELECT t.username,t.nickname FROM s_users t WHERE t.isenable = '1' ;
    </select>

    <insert id="add">
        INSERT INTO card_info (
        uuid,
        card_id,
        card_name,
        card_manager,
        card_color
        )
        VALUES (
        #{uuid},
        #{uuid},
        #{cardName, jdbcType = VARCHAR},
        #{cardManager, jdbcType = VARCHAR},
        #{cardColor, jdbcType = INTEGER}
        );
    </insert>

    <update id="upd">
        UPDATE card_info
        SET
          card_name = #{cardName, jdbcType = VARCHAR},
          card_manager = #{cardManager, jdbcType = VARCHAR}
        WHERE uuid = #{uuid};
    </update>

    <delete id="deleteCardInfo">
        DELETE FROM card_info WHERE uuid = #{uuid};

    </delete>

    <select id="queryCardInfoByUuid" resultType="java.util.Map">
        SELECT
          t.uuid,
          t.card_name,
          t.card_manager       username,
          u.nickname           card_manager,
          ifnull(b.balance, 0) balance,
          t.card_color
        FROM card_info t
          LEFT JOIN s_users u ON t.card_manager = u.username AND u.isenable = '1'
          LEFT JOIN (SELECT
                       a.card_id,
                       sum(a.balance) balance
                     FROM account_info a
                       LEFT JOIN card_info c ON a.card_id = c.card_id
                     GROUP BY a.card_id
                    ) b ON t.card_id = b.card_id
        WHERE t.uuid = #{uuid}

    </select>

    <select id="queryCardUserInfo" resultType="java.util.Map">
        SELECT
            t.user_id      username,
            u.nickname,
            sum(t.balance) balance
          FROM account_info t
          LEFT JOIN s_users u ON t.user_id = u.username AND u.isenable = '1'
         WHERE t.card_id = #{uuid}
        <if test="queryCode != null and queryCode != ''">
            AND t.user_id like CONCAT('%',#{queryCode},'%')
        </if>
        <if test="queryName != null and queryName != ''">
            AND u.nickname like CONCAT('%',#{queryName},'%')
        </if>
        GROUP BY t.user_id,u.nickname

    </select>
    
    <select id="getUserInfoByUserId" resultType="java.util.Map">
        SELECT
            t.user_id username,
            u.nickname,
            sum(t.balance) balance
          FROM account_info t
          LEFT JOIN s_users u ON t.user_id = u.username AND u.isenable = '1'
         WHERE t.user_id = #{username}
          AND t.card_id = #{cardId}
        GROUP BY t.user_id,u.nickname
    </select>

    <select id="queryUsersWithOutThisCard" resultType="map">
        SELECT su.username, su.nickname
          FROM s_users su
          LEFT JOIN account_info ai
            ON ai.user_id = su.username
               AND ai.card_id = #{cardId}
        WHERE su.isenable = '1' AND ai.uuid IS NULL AND su.username != 'superadmin'
    </select>
    <insert id="saveAccountInfo">
        insert into account_info (
        uuid,
        user_id,
        card_id,
        balance
        ) values (
        #{uuid},
        #{userId},
        #{cardId},
        0
        )
    </insert>

    <delete id="removeUser">
        DELETE FROM account_info
        WHERE user_id = #{username}
        AND card_id = #{cardId}
    </delete>

    <update id="rechargeSave">
        UPDATE account_info
          SET balance = balance + #{rechargeMoney}
        WHERE card_id = #{cardId}
         AND user_id = #{userName}
    </update>
</mapper>
